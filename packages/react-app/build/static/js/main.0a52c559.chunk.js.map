{"version":3,"sources":["components/Address.jsx","components/Balance.jsx","constants.js","helpers/Transactor.js","components/Blockie.jsx","components/AddressInput.jsx","components/Wallet.jsx","components/Account.jsx","components/BytesStringInput.jsx","components/Contract/FunctionForm.jsx","components/Contract/utils.js","components/Faucet.jsx","helpers/loadAppContracts.js","components/Swap.jsx","components/Timeline.jsx","components/L2Bridge.jsx","ethereumLogo.png","components/Header1.jsx","components/BigTransfer.jsx","components/Library.jsx","components/Benefits.jsx","components/Footer.jsx","components/PrivateLibrary.jsx","components/SharingHistory.jsx","App.jsx","hooks/useContractConfig.js","index.jsx"],"names":["Text","Typography","Address","props","address","value","ens","useLookupAddress","ensProvider","currentTheme","useThemeSwitcher","avatar","paragraph","rows","displayAddress","substr","indexOf","size","text","etherscanLink","blockExplorer","blockExplorerLink","minimized","style","verticalAlign","color","target","href","rel","seed","toLowerCase","scale","onChange","editable","copyable","fontSize","paddingLeft","require","utils","INFURA_ID","NETWORKS","localhost","name","chainId","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","localArbitrum","localArbitrumL1","rinkebyArbitrum","arbitrum","localOptimismL1","localOptimism","kovanOptimism","optimism","localAvalanche","fujiAvalanche","mainnetAvalanche","testnetHarmony","mainnetHarmony","ethers","callbacks","Transactor","providerOrSigner","etherscan","tx","callback","a","Signer","isSigner","provider","signer","getNetwork","network","_isProvider","getSigner","console","log","options","notify","navigator","onLine","dappId","system","networkId","transactionHandler","txInformation","possibleFunction","transaction","hash","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","emitter","on","onclick","open","notification","info","message","description","placement","txResult","listeningInterval","setInterval","getTransactionReceipt","currentTransactionReceipt","confirmations","clearInterval","wait","data","error","JSON","parse","stringify","body","obj","errorObj","e","Blockie","isENS","endsWith","AddressInput","useState","setValue","scan","setScan","currentValue","updateAddress","useCallback","newValue","resolveName","possibleAddress","zIndex","position","left","top","width","onClick","delay","resolution","onError","onScan","possibleNewValue","lastIndexOf","id","autoComplete","autoFocus","placeholder","prefix","isAddress","addonAfter","marginTop","cursor","count","CameraOutlined","QrcodeOutlined","Paragraph","Account","userSigner","localProvider","mainnetProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","networkDisplay","modalButtons","cachedProvider","push","marginLeft","shape","constants","BigNumber","contractListPromise","externalContractsPromise","loadAppContracts","config","default","deployedContracts","externalContracts","Select","Option","Swap","Header1","acnt","setRoute","className","src","logo","loading","alt","height","to","BigTransfer","writeContracts","fileUrl","setFileUrl","priv","setPriv","fileName","setfileName","fileCategory","setfileCategory","fileDescription","setfileDescription","submitContract","Library","PrivateUpload","waveTnx","publicUpload","MozTransform","MsTransform","type","setUrl","margin","backgroundColor","padding","disabled","paddingTop","checkedChildren","unCheckedChildren","defaultChecked","WebkitTransform","publicLibrary","searchEvents","setSearchEvents","val","setVal","getFilePrice","x","assetPrice","buyFile","then","r","buyItem","filter","item","includes","display","flexWrap","length","map","index","Link","sizes","download","toString","transactionHash","blockNumber","Benefits","Footer","h","role","PrivateLibrary","privateLibrary","shareToAddresses","setShareToAddresses","salePrice","newPrice","prompt","publicSale","update","share","ID","shareEvents","Panel","Collapse","shareEventsReverse","it","args","reverse","defaultActiveKey","header","headStyle","borderRadius","background","bodyStyle","minWidth","alignContent","justifyContent","alignItems","marginRight","fontWeight","marginLRight","blockHash","BufferList","ipfsAPI","host","port","protocol","targetNetwork","scaffoldEthProvider","providers","StaticJsonRpcProvider","poktMainnetProvider","mainnetInfura","localProviderUrl","localProviderUrlFromEnv","process","REACT_APP_PROVIDER","walletLinkProvider","WalletLink","appName","makeWeb3Provider","Web3Modal","cacheProvider","theme","providerOptions","walletconnect","package","WalletConnectProvider","bridge","infuraId","rpc","portis","Portis","fortmatic","Fortmatic","key","connector","_options","enable","authereum","Authereum","App","_network","injectedProvider","setInjectedProvider","setAddress","clearCachedProvider","disconnect","setTimeout","reload","useExchangeEthPrice","useGasPrice","useUserProviderAndSigner","useEffect","getAddress","newAddress","localChainId","selectedChainId","yourLocalBalance","useBalance","yourMainnetBalance","contractConfig","contractsConfig","setContractsConfig","loadFunc","useContractConfig","readContracts","useContractLoader","mainnetContracts","useOnBlock","_lastBlockNumber","myMainnetDAIBalance","useContractReader","uploadEvents","useEventListener","connect","Web3Provider","code","reason","pathname","right","exact","path","themes","dark","light","subgraphUri","localStorage","getItem","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","document","getElementById"],"mappings":"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","file":"static/js/main.0a52c559.chunk.js","sourcesContent":["import { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\n\n// changed value={address} to address={address}\n\n/*\n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n*/\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) =>\n  `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const address = props.value || props.address;\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  const { currentTheme } = useThemeSwitcher();\n\n  if (!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  let displayAddress = address.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\") < 0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  let text;\n  if (props.onChange) {\n    text = (\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  } else {\n    text = (\n      <Text copyable={{ text: address }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  }\n\n  return (\n    <span>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\n      </span>\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\n        {text}\n      </span>\n    </span>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useBalance } from \"eth-hooks\";\n\nconst { utils } = require(\"ethers\");\n\n/*\n  ~ What it does? ~\n\n  Displays a balance of given address in ether & dollar\n\n  ~ How can I use? ~\n\n  <Balance\n    address={address}\n    provider={mainnetProvider}\n    price={price}\n  />\n\n  ~ If you already have the balance as a bignumber ~\n  <Balance\n    balance={balance}\n    price={price}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to given address\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\n  - Provide price={price} of ether and get your balance converted to dollars\n*/\n\nexport default function Balance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n\n  // const [listening, setListening] = useState(false);\n\n  const balance = useBalance(props.provider, props.address);\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n  if (typeof props.value !== \"undefined\") {\n    usingBalance = props.value;\n  }\n\n  if (usingBalance) {\n    const etherBalance = utils.formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  const price = props.price || props.dollarMultiplier;\n\n  if (price && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\n  }\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        fontSize: props.size ? props.size : 24,\n        padding: 8,\n        cursor: \"pointer\",\n      }}\n      onClick={() => {\n        setDollarMode(!dollarMode);\n      }}\n    >\n      {displayBalance}\n    </span>\n  );\n}\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\n// export const INFURA_ID = \"460f40a260564ac4a4f4b3fffb032dad\";\nexport const INFURA_ID = \"367c7782c20c417b982f27e96724e8ed\";\n\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\n\n// BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\n\nexport const NETWORKS = {\n  localhost: {\n    name: \"localhost\",\n    color: \"#666666\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\n  },\n  mainnet: {\n    name: \"mainnet\",\n    color: \"#ff8b9e\",\n    chainId: 1,\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n  kovan: {\n    name: \"kovan\",\n    color: \"#7003DD\",\n    chainId: 42,\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://kovan.etherscan.io/\",\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", // https://faucet.kovan.network/\n  },\n  rinkeby: {\n    name: \"rinkeby\",\n    color: \"#e0d068\",\n    chainId: 4,\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\n    faucet: \"https://faucet.rinkeby.io/\",\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\n  },\n  ropsten: {\n    name: \"ropsten\",\n    color: \"#F60D09\",\n    chainId: 3,\n    faucet: \"https://faucet.ropsten.be/\",\n    blockExplorer: \"https://ropsten.etherscan.io/\",\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n  },\n  goerli: {\n    name: \"goerli\",\n    color: \"#0975F6\",\n    chainId: 5,\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  xdai: {\n    name: \"xdai\",\n    color: \"#48a9a6\",\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://dai.poa.network\",\n    faucet: \"https://xdai-faucet.top/\",\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\n  },\n  matic: {\n    name: \"matic\",\n    color: \"#2bbdf7\",\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\n  },\n  mumbai: {\n    name: \"mumbai\",\n    color: \"#92D9FA\",\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\n  },\n  localArbitrum: {\n    name: \"localArbitrum\",\n    color: \"#50a0ea\",\n    chainId: 153869338190755,\n    blockExplorer: \"\",\n    rpcUrl: `http://localhost:8547`,\n  },\n  localArbitrumL1: {\n    name: \"localArbitrumL1\",\n    color: \"#50a0ea\",\n    chainId: 44010,\n    blockExplorer: \"\",\n    rpcUrl: `http://localhost:7545`,\n  },\n  rinkebyArbitrum: {\n    name: \"Arbitrum Testnet\",\n    color: \"#50a0ea\",\n    chainId: 421611,\n    blockExplorer: \"https://rinkeby-explorer.arbitrum.io/#/\",\n    rpcUrl: `https://rinkeby.arbitrum.io/rpc`,\n  },\n  arbitrum: {\n    name: \"Arbitrum\",\n    color: \"#50a0ea\",\n    chainId: 42161,\n    blockExplorer: \"https://explorer.arbitrum.io/#/\",\n    rpcUrl: `https://arb1.arbitrum.io/rpc`,\n    gasPrice: 0,\n  },\n  localOptimismL1: {\n    name: \"localOptimismL1\",\n    color: \"#f01a37\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":9545\",\n  },\n  localOptimism: {\n    name: \"localOptimism\",\n    color: \"#f01a37\",\n    chainId: 420,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\n    gasPrice: 0,\n  },\n  kovanOptimism: {\n    name: \"kovanOptimism\",\n    color: \"#f01a37\",\n    chainId: 69,\n    blockExplorer: \"https://kovan-optimistic.etherscan.io/\",\n    rpcUrl: `https://kovan.optimism.io`,\n    gasPrice: 0,\n  },\n  optimism: {\n    name: \"optimism\",\n    color: \"#f01a37\",\n    chainId: 10,\n    blockExplorer: \"https://optimistic.etherscan.io/\",\n    rpcUrl: `https://mainnet.optimism.io`,\n  },\n  localAvalanche: {\n    name: \"localAvalanche\",\n    color: \"#666666\",\n    chainId: 43112,\n    blockExplorer: \"\",\n    rpcUrl: `http://localhost:9650/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n  fujiAvalanche: {\n    name: \"fujiAvalanche\",\n    color: \"#666666\",\n    chainId: 43113,\n    blockExplorer: \"https://cchain.explorer.avax-test.network/\",\n    rpcUrl: `https://api.avax-test.network/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n  mainnetAvalanche: {\n    name: \"mainnetAvalanche\",\n    color: \"#666666\",\n    chainId: 43114,\n    blockExplorer: \"https://cchain.explorer.avax.network/\",\n    rpcUrl: `https://api.avax.network/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n  testnetHarmony: {\n    name: \"Harmony Testnet\",\n    color: \"#00b0ef\",\n    chainId: 1666700000,\n    blockExplorer: \"https://explorer.pops.one/\",\n    rpcUrl: `https://api.s0.b.hmny.io`,\n    gasPrice: 1000000000,\n  },\n  mainnetHarmony: {\n    name: \"Harmony Mainnet\",\n    color: \"#00b0ef\",\n    chainId: 1666600000,\n    blockExplorer: \"https://explorer.harmony.one/\",\n    rpcUrl: `https://api.harmony.one`,\n    gasPrice: 1000000000,\n  },\n};\n\nexport const NETWORK = chainId => {\n  for (const n in NETWORKS) {\n    if (NETWORKS[n].chainId === chainId) {\n      return NETWORKS[n];\n    }\n  }\n};\n","import { notification } from \"antd\";\nimport Notify from \"bnc-notify\";\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\n\nconst { ethers } = require(\"ethers\");\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\nconst callbacks = {};\n\nconst DEBUG = true;\n\nexport default function Transactor(providerOrSigner, gasPrice, etherscan) {\n  if (typeof providerOrSigner !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async (tx, callback) => {\n      let signer;\n      let network;\n      let provider;\n      if (ethers.Signer.isSigner(providerOrSigner) === true) {\n        provider = providerOrSigner.provider;\n        signer = providerOrSigner;\n        network = providerOrSigner.provider && (await providerOrSigner.provider.getNetwork());\n      } else if (providerOrSigner._isProvider) {\n        provider = providerOrSigner;\n        signer = providerOrSigner.getSigner();\n        network = await providerOrSigner.getNetwork();\n      }\n\n      console.log(\"network\", network);\n\n      let options = null;\n      let notify = null;\n      if (navigator.onLine) {\n        options = {\n          dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\n          system: \"ethereum\",\n          networkId: network.chainId,\n          // darkMode: Boolean, // (default: false)\n          transactionHandler: txInformation => {\n            if (DEBUG) console.log(\"HANDLE TX\", txInformation);\n            const possibleFunction = callbacks[txInformation.transaction.hash];\n            if (typeof possibleFunction === \"function\") {\n              possibleFunction(txInformation.transaction);\n            }\n          },\n        };\n\n        notify = Notify(options);\n      }\n\n      let etherscanNetwork = \"\";\n      if (network.name && network.chainId > 1) {\n        etherscanNetwork = network.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (network.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        if (tx instanceof Promise) {\n          if (DEBUG) console.log(\"AWAITING TX\", tx);\n          result = await tx;\n        } else {\n          if (!tx.gasPrice) {\n            tx.gasPrice = gasPrice || ethers.utils.parseUnits(\"4.1\", \"gwei\");\n          }\n          if (!tx.gasLimit) {\n            tx.gasLimit = ethers.utils.hexlify(120000);\n          }\n          if (DEBUG) console.log(\"RUNNING TX\", tx);\n          result = await signer.sendTransaction(tx);\n        }\n        if (DEBUG) console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        if (callback) {\n          callbacks[result.hash] = callback;\n        }\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if (notify && [1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => {\n            return {\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n            };\n          });\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          });\n          // on most networks BlockNative will update a transaction handler,\n          // but locally we will set an interval to listen...\n          if (callback) {\n            const txResult = await tx;\n            const listeningInterval = setInterval(async () => {\n              console.log(\"CHECK IN ON THE TX\", txResult, provider);\n              const currentTransactionReceipt = await provider.getTransactionReceipt(txResult.hash);\n              if (currentTransactionReceipt && currentTransactionReceipt.confirmations) {\n                callback({ ...txResult, ...currentTransactionReceipt });\n                clearInterval(listeningInterval);\n              }\n            }, 500);\n          }\n        }\n\n        if (typeof result.wait === \"function\") {\n          await result.wait();\n        }\n\n        return result;\n      } catch (e) {\n        if (DEBUG) console.log(e);\n        // Accounts for Metamask and default signer on all networks\n        let message =\n          e.data && e.data.message\n            ? e.data.message\n            : e.error && JSON.parse(JSON.stringify(e.error)).body\n            ? JSON.parse(JSON.parse(JSON.stringify(e.error)).body).error.message\n            : e.data\n            ? e.data\n            : JSON.stringify(e);\n        if (!e.error && e.message) {\n          message = e.message;\n        }\n\n        console.log(\"Attempt to clean up:\", message);\n        try {\n          let obj = JSON.parse(message);\n          if (obj && obj.body) {\n            let errorObj = JSON.parse(obj.body);\n            if (errorObj && errorObj.error && errorObj.error.message) {\n              message = errorObj.error.message;\n            }\n          }\n        } catch (e) {\n          //ignore\n        }\n\n        notification.error({\n          message: \"Transaction Error\",\n          description: message,\n        });\n        if (callback && typeof callback === \"function\") {\n          callback(e);\n        }\n      }\n    };\n  }\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\n\n// provides a blockie image for the address using \"react-blockies\" library\n\nexport default function Blockie(props) {\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\n    return <span />;\n  }\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\n}\n","import { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport { Badge, Input } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\nimport React, { useCallback, useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport Blockie from \"./Blockie\";\nimport { ethers } from \"ethers\";\n\n// probably we need to change value={toAddress} to address={toAddress}\n\n/*\n  ~ What it does? ~\n  Displays an address input with QR scan option\n  ~ How can I use? ~\n  <AddressInput\n    autoFocus\n    ensProvider={mainnetProvider}\n    placeholder=\"Enter address\"\n    value={toAddress}\n    onChange={setToAddress}\n  />\n  ~ Features ~\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide placeholder=\"Enter address\" value for the input\n  - Value of the address input is stored in value={toAddress}\n  - Control input change by onChange={setToAddress}\n                          or onChange={address => { setToAddress(address);}}\n*/\n\nconst isENS = (address = \"\") => address.endsWith(\".eth\") || address.endsWith(\".xyz\");\n\nexport default function AddressInput(props) {\n  const { ensProvider, onChange } = props;\n  const [value, setValue] = useState(props.value);\n  const [scan, setScan] = useState(false);\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n  const ens = useLookupAddress(props.ensProvider, currentValue);\n\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (isENS(address)) {\n          try {\n            const possibleAddress = await ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setValue(address);\n        if (typeof onChange === \"function\") {\n          onChange(address);\n        }\n      }\n    },\n    [ensProvider, onChange],\n  );\n\n  return (\n    <div>\n      {scan ? (\n        <div\n          style={{\n            zIndex: 256,\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n          }}\n          onClick={() => {\n            setScan(false);\n          }}\n        >\n          <QrReader\n            delay={250}\n            resolution={1200}\n            onError={e => {\n              console.log(\"SCAN ERROR\", e);\n              setScan(false);\n            }}\n            onScan={newValue => {\n              if (newValue) {\n                console.log(\"SCAN VALUE\", newValue);\n                let possibleNewValue = newValue;\n                if (possibleNewValue.indexOf(\"/\") >= 0) {\n                  possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\n                  console.log(\"CLEANED VALUE\", possibleNewValue);\n                }\n                setScan(false);\n                updateAddress(possibleNewValue);\n              }\n            }}\n            style={{ width: \"100%\" }}\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n      <Input\n        id=\"0xAddress\" // name it something other than address for auto fill doxxing\n        name=\"0xAddress\" // name it something other than address for auto fill doxxing\n        autoComplete=\"off\"\n        autoFocus={props.autoFocus}\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\n        value={ethers.utils.isAddress(currentValue) && !isENS(currentValue) && isENS(ens) ? ens : currentValue}\n        addonAfter={\n          <div\n            style={{ marginTop: 4, cursor: \"pointer\" }}\n            onClick={() => {\n              setScan(!scan);\n            }}\n          >\n            <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\n              <QrcodeOutlined style={{ fontSize: 18 }} />\n            </Badge>{\" \"}\n            Scan\n          </div>\n        }\n        onChange={e => {\n          updateAddress(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\n\nconst { Text, Paragraph } = Typography;\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [props.signer]);\n\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n\n  const providerSend = props.signer ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = (\n        <div>\n          <b>*injected account*, private key unknown</b>\n        </div>\n      );\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push(\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\n          <a href={\"/pk#\" + pk}>\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\n          </a>\n        </div>,\n      );\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={\"/pk#\" + pastpk}>\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\n                  {pastwallet.address.substr(0, 6)}\n                </a>\n              </div>,\n            );\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div>\n            <Text copyable>{pk}</Text>\n          </div>\n\n          <hr />\n\n          <i>\n            Point your camera phone at qr code to open in\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\n              burner wallet\n            </a>\n            :\n          </i>\n          <QR\n            value={\"https://xdai.io/\" + pk}\n            size=\"450\"\n            level=\"H\"\n            includeMargin\n            renderAs=\"svg\"\n            imageSettings={{ excavate: false }}\n          />\n\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\n            {\"https://xdai.io/\" + pk}\n          </Paragraph>\n\n          {extraPkDisplay ? (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button\n                onClick={() => {\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n                  if (currentPrivateKey) {\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n                  }\n                  const randomWallet = ethers.Wallet.createRandom();\n                  const privateKey = randomWallet._signingKey().privateKey;\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n                  window.location.reload();\n                }}\n              >\n                Generate\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(\"\");\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Hide\n      </Button>\n    );\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.signer || props.provider);\n\n              let value;\n              try {\n                value = ethers.utils.parseEther(\"\" + amount);\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              });\n              setOpen(!open);\n              setQr();\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\n/*\n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n*/\n\nexport default function Account({\n  address,\n  userSigner,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n  networkDisplay,\n}) {\n  const modalButtons = [];\n  if (web3Modal) {\n    if (web3Modal.cachedProvider) {\n      modalButtons.push(\n        <Button\n          key=\"logoutbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          onClick={logoutOfWeb3Modal}\n        >\n          logout\n        </Button>,\n      );\n    } else {\n      modalButtons.push(\n        <Button\n          key=\"loginbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          /* type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time */\n          onClick={loadWeb3Modal}\n        >\n          connect\n        </Button>,\n      );\n    }\n  }\n\n  const { currentTheme } = useThemeSwitcher();\n\n  const display = minimized ? (\n    \"\"\n  ) : (\n    <span>\n      {address ? (\n        <Address address={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} />\n      ) : (\n        \"Connecting...\"\n      )}\n      <Balance address={address} provider={localProvider} price={price} />\n      <Wallet\n        address={address}\n        provider={localProvider}\n        signer={userSigner}\n        ensProvider={mainnetProvider}\n        price={price}\n        color={currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\"}\n      />\n    </span>\n  );\n\n  return (\n    <div>\n      {/* {display} */}\n\n      {modalButtons}\n      {networkDisplay}\n    </div>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\nconst { utils, constants } = require(\"ethers\");\n\n/*\n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value);}}\n\n*/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState(constants.HashZero);\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"STRING\") {\n            setMode(\"BYTES32\");\n            if (!utils.isHexString(currentValue)) {\n              /* in case user enters invalid bytes32 number,\n                   it considers it as string and converts to bytes32 */\n              const changedValue = utils.formatBytes32String(currentValue);\n              setDisplay(changedValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          } else {\n            setMode(\"STRING\");\n            if (currentValue && utils.isHexString(currentValue)) {\n              setDisplay(utils.parseBytes32String(currentValue));\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let addonAfter;\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\");\n  } else {\n    addonAfter = option(\"BYTES32 🔀\");\n  }\n\n  useEffect(() => {\n    if (!currentValue) {\n      setDisplay(\"\");\n    }\n  }, [currentValue]);\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"STRING\") {\n          // const ethValue = parseFloat(newValue) / props.price;\n          // setValue(ethValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue));\n          }\n          setValue(utils.formatBytes32String(newValue));\n          setDisplay(newValue);\n        } else {\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setValue(newValue);\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import { Button, Col, Divider, Input, Row, Tooltip } from \"antd\";\nimport React, { useState } from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\n\nconst { utils, BigNumber } = require(\"ethers\");\n\nconst getFunctionInputKey = (functionInfo, input, inputIndex) => {\n  const name = input?.name ? input.name : \"input_\" + inputIndex + \"_\";\n  return functionInfo.name + \"_\" + name + \"_\" + input.type;\n};\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  const inputs = functionInfo.inputs.map((input, inputIndex) => {\n    const key = getFunctionInputKey(functionInfo, input, inputIndex);\n\n    let buttons = \"\";\n    if (input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to bytes32\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to hex\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]));\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"* 10 ** 18\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form };\n              formUpdate[key] = utils.parseEther(form[key]);\n              setForm(formUpdate);\n            }}\n          >\n            ✴️\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"address\") {\n      const possibleAddress = form[key] && form[key].toLowerCase && form[key].toLowerCase().trim();\n      if (possibleAddress && possibleAddress.length === 42) {\n        buttons = (\n          <Tooltip placement=\"right\" title=\"blockie\">\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        );\n      }\n    }\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={event => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    );\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key=\"txValueInput\">\n      <Input\n        placeholder=\"transaction value\"\n        onChange={e => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\" * 10^18 \">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      const floatValue = parseFloat(txValue);\n                      if (floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\"number to hex\">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue).toHexString());\n                    }}\n                  >\n                    #️⃣\n                  </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon =\n    functionInfo.type === \"call\" ? (\n      <Button style={{ marginLeft: -32 }}>Read📡</Button>\n    ) : (\n      <Button style={{ marginLeft: -32 }}>Send💸</Button>\n    );\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\n      <Input\n        onChange={e => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              const args = functionInfo.inputs.map((input, inputIndex) => {\n                const key = getFunctionInputKey(functionInfo, input, inputIndex);\n                let value = form[key];\n                if (input.baseType === \"array\") {\n                  value = JSON.parse(value);\n                } else if (input.type === \"bool\") {\n                  if (value === \"true\" || value === \"1\" || value === \"0x1\" || value === \"0x01\" || value === \"0x0001\") {\n                    value = 1;\n                  } else {\n                    value = 0;\n                  }\n                }\n                return value;\n              });\n\n              let result;\n              if (functionInfo.stateMutability === \"view\" || functionInfo.stateMutability === \"pure\") {\n                try {\n                  const returned = await contractFunction(...args);\n                  result = tryToDisplay(returned);\n                } catch (err) {\n                  console.error(err);\n                }\n              } else {\n                const overrides = {};\n                if (txValue) {\n                  overrides.value = txValue; // ethers.utils.parseEther()\n                }\n                if (gasPrice) {\n                  overrides.gasPrice = gasPrice;\n                }\n                // Uncomment this if you want to skip the gas estimation for each transaction\n                // overrides.gasLimit = hexlify(1200000);\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides));\n                result = tryToDisplay(returned);\n              }\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Address } from \"..\";\n\nconst { utils } = require(\"ethers\");\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\" + utils.formatUnits(thing, \"ether\");\n    }\n  }\n  if (thing && thing.indexOf && thing.indexOf(\"0x\") === 0 && thing.length === 42) {\n    return <Address address={thing} fontSize={22} />;\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n","import { SendOutlined } from \"@ant-design/icons\";\nimport { Button, Input, Tooltip } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Transactor } from \"../helpers\";\nimport Wallet from \"./Wallet\";\n\nconst { utils } = require(\"ethers\");\n\n// improved a bit by converting address to ens if it exists\n// added option to directly input ens name\n// added placeholder option\n\n/*\n  ~ What it does? ~\n\n  Displays a local faucet to send ETH to given address, also wallet is provided\n\n  ~ How can I use? ~\n\n  <Faucet\n    price={price}\n    localProvider={localProvider}\n    ensProvider={mainnetProvider}\n    placeholder={\"Send local faucet\"}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and convert between USD and ETH in a wallet\n  - Provide localProvider={localProvider} to be able to send ETH to given address\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n              works both in input field & wallet\n  - Provide placeholder=\"Send local faucet\" value for the input\n*/\n\nexport default function Faucet(props) {\n  const [address, setAddress] = useState();\n  const [faucetAddress, setFaucetAddress] = useState();\n\n  useEffect(() => {\n    const getFaucetAddress = async () => {\n      if (props.localProvider) {\n        const _faucetAddress = await props.localProvider.listAccounts();\n        setFaucetAddress(_faucetAddress[0]);\n        //console.log(_faucetAddress);\n      }\n    };\n    getFaucetAddress();\n  }, [props.localProvider]);\n\n  let blockie;\n  if (address && typeof address.toLowerCase === \"function\") {\n    blockie = <Blockies seed={address.toLowerCase()} size={8} scale={4} />;\n  } else {\n    blockie = <div />;\n  }\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n          try {\n            const possibleAddress = await props.ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setAddress(address);\n      }\n    },\n    [props.ensProvider, props.onChange],\n  );\n\n  const tx = Transactor(props.localProvider);\n\n  return (\n    <span>\n      <Input\n        size=\"large\"\n        placeholder={props.placeholder ? props.placeholder : \"local faucet\"}\n        prefix={blockie}\n        // value={address}\n        value={ens || address}\n        onChange={e => {\n          // setAddress(e.target.value);\n          updateAddress(e.target.value);\n        }}\n        suffix={\n          <Tooltip title=\"Faucet: Send local ether to an address.\">\n            <Button\n              onClick={() => {\n                tx({\n                  to: address,\n                  value: utils.parseEther(\"0.01\"),\n                });\n                setAddress(\"\");\n              }}\n              shape=\"circle\"\n              icon={<SendOutlined />}\n            />\n            <Wallet\n              color=\"#888888\"\n              provider={props.localProvider}\n              ensProvider={props.ensProvider}\n              price={props.price}\n              address={faucetAddress}\n            />\n          </Tooltip>\n        }\n      />\n    </span>\n  );\n}\n","const contractListPromise = import(\"../contracts/hardhat_contracts.json\");\n// @ts-ignore\nconst externalContractsPromise = import(\"../contracts/external_contracts\");\n\nexport const loadAppContracts = async () => {\n  const config = {};\n  config.deployedContracts = (await contractListPromise).default ?? {};\n  config.externalContracts = (await externalContractsPromise).default ?? {};\n  return config;\n};\n","import { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\nimport {\n  Button,\n  Card,\n  Descriptions,\n  Divider,\n  Drawer,\n  InputNumber,\n  Modal,\n  notification,\n  Row,\n  Select,\n  Space,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\n\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nconst erc20Abi = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n  \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\",\n];\n\nconst makeCall = async (callName, contract, args, metadata = {}) => {\n  if (contract[callName]) {\n    let result;\n    if (args) {\n      result = await contract[callName](...args, metadata);\n    } else {\n      result = await contract[callName]();\n    }\n    return result;\n  }\n  return undefined;\n  console.log(\"no call of that name!\");\n};\n\nconst defaultToken = \"ETH\";\nconst defaultTokenOut = \"DAI\";\nconst defaultSlippage = \"0.5\";\nconst defaultTimeLimit = 60 * 10;\n\nconst tokenListToObject = array =>\n  array.reduce((obj, item) => {\n    obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\n    return obj;\n  }, {});\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n  const [tokenIn, setTokenIn] = useState(defaultToken);\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\n  const [exact, setExact] = useState();\n  const [amountIn, setAmountIn] = useState();\n  const [amountInMax, setAmountInMax] = useState();\n  const [amountOut, setAmountOut] = useState();\n  const [amountOutMin, setAmountOutMin] = useState();\n  const [trades, setTrades] = useState();\n  const [routerAllowance, setRouterAllowance] = useState();\n  const [balanceIn, setBalanceIn] = useState();\n  const [balanceOut, setBalanceOut] = useState();\n  const [slippageTolerance, setSlippageTolerance] = useState(\n    new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"),\n  );\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\n  const [swapping, setSwapping] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\n\n  const [tokenList, setTokenList] = useState([]);\n\n  const [tokens, setTokens] = useState();\n\n  const [invertPrice, setInvertPrice] = useState(false);\n\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\n\n  const signer = selectedProvider.getSigner();\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri);\n      try {\n        const tokenListResponse = await fetch(_tokenListUri);\n        const tokenListJson = await tokenListResponse.json();\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\n          return t.chainId === activeChainId;\n        });\n        const ethToken = WETH[activeChainId];\n        ethToken.name = \"Ethereum\";\n        ethToken.symbol = \"ETH\";\n        ethToken.logoURI =\n          \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n        const _tokenList = [ethToken, ...filteredTokens];\n        setTokenList(_tokenList);\n        const _tokens = tokenListToObject(_tokenList);\n        setTokens(_tokens);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getTokenList();\n  }, [tokenListURI]);\n\n  const getTrades = async () => {\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\n\n      const baseTokens = tokenList\n        .filter(function (t) {\n          return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\n        })\n        .map(el => {\n          return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\n        });\n\n      const listOfPairwiseTokens = pairs(baseTokens);\n\n      const getPairs = async list => {\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n      };\n\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\n\n      let bestTrade;\n\n      if (exact === \"in\") {\n        setAmountInMax();\n        bestTrade = Trade.bestTradeExactIn(\n          listOfPairs.filter(item => item),\n          new TokenAmount(tokens[tokenIn], ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n          tokens[tokenOut],\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\n        } else {\n          setAmountOut();\n        }\n      } else if (exact === \"out\") {\n        setAmountOutMin();\n        bestTrade = Trade.bestTradeExactOut(\n          listOfPairs.filter(item => item),\n          tokens[tokenIn],\n          new TokenAmount(tokens[tokenOut], ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\n        } else {\n          setAmountIn();\n        }\n      }\n\n      setTrades(bestTrade);\n\n      console.log(bestTrade);\n    }\n  };\n\n  useEffect(() => {\n    getTrades();\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\n\n  useEffect(() => {\n    if (trades && trades[0]) {\n      if (exact === \"in\") {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\n      } else if (exact === \"out\") {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades]);\n\n  const getBalance = async (_token, _account, _contract) => {\n    let newBalance;\n    if (_token === \"ETH\") {\n      newBalance = await selectedProvider.getBalance(_account);\n    } else {\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\n    }\n    return newBalance;\n  };\n\n  const getAccountInfo = async () => {\n    if (tokens) {\n      const accountList = await selectedProvider.listAccounts();\n\n      if (tokenIn) {\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\n        setBalanceIn(newBalanceIn);\n\n        let allowance;\n\n        if (tokenIn === \"ETH\") {\n          setRouterAllowance();\n        } else {\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\n          setRouterAllowance(allowance);\n        }\n      }\n\n      if (tokenOut) {\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\n        setBalanceOut(newBalanceOut);\n      }\n    }\n  };\n\n  usePoller(getAccountInfo, 6000);\n\n  const route = trades\n    ? trades.length > 0\n      ? trades[0].route.path.map(function (item) {\n          return item.symbol;\n        })\n      : []\n    : [];\n\n  const updateRouterAllowance = async newAllowance => {\n    setApproving(true);\n    try {\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\n      console.log(result);\n      setApproving(false);\n      return true;\n    } catch (e) {\n      notification.open({\n        message: \"Approval unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const approveRouter = async () => {\n    const approvalAmount =\n      exact === \"in\"\n        ? ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        : amountInMax.raw.toString();\n    console.log(approvalAmount);\n    const approval = updateRouterAllowance(approvalAmount);\n    if (approval) {\n      notification.open({\n        message: \"Token transfer approved\",\n        description: `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  };\n\n  const removeRouterAllowance = async () => {\n    const approvalAmount = ethers.utils.hexlify(0);\n    console.log(approvalAmount);\n    const removal = updateRouterAllowance(approvalAmount);\n    if (removal) {\n      notification.open({\n        message: \"Token approval removed\",\n        description: `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  };\n\n  const executeSwap = async () => {\n    setSwapping(true);\n    try {\n      let args;\n      const metadata = {};\n\n      let call;\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\n      const path = trades[0].route.path.map(function (item) {\n        return item.address;\n      });\n      console.log(path);\n      const accountList = await selectedProvider.listAccounts();\n      const address = accountList[0];\n\n      if (exact === \"in\") {\n        const _amountIn = ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapExactETHForTokens\";\n          args = [_amountOutMin, path, address, deadline];\n          metadata.value = _amountIn;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\n          args = [_amountIn, _amountOutMin, path, address, deadline];\n        }\n      } else if (exact === \"out\") {\n        const _amountOut = ethers.utils.hexlify(\n          ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals),\n        );\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapETHForExactTokens\";\n          args = [_amountOut, path, address, deadline];\n          metadata.value = _amountInMax;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\n          args = [_amountOut, _amountInMax, path, address, deadline];\n        }\n      }\n      console.log(call, args, metadata);\n      const result = await makeCall(call, routerContract, args, metadata);\n      console.log(result);\n      notification.open({\n        message: \"Swap complete 🦄\",\n        description: (\n          <>\n            <Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text>\n            <Text copyable>{result.hash}</Text>\n          </>\n        ),\n      });\n      setSwapping(false);\n    } catch (e) {\n      console.log(e);\n      setSwapping(false);\n      notification.open({\n        message: \"Swap unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap();\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  const insufficientBalance = balanceIn\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const inputIsToken = tokenIn !== \"ETH\";\n  const insufficientAllowance = !inputIsToken\n    ? false\n    : routerAllowance\n    ? parseFloat(ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const formattedBalanceIn = balanceIn\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6)\n    : null;\n  const formattedBalanceOut = balanceOut\n    ? parseFloat(ethers.utils.formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6)\n    : null;\n\n  const metaIn =\n    tokens && tokenList && tokenIn\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenIn].address;\n        })[0]\n      : null;\n  const metaOut =\n    tokens && tokenList && tokenOut\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenOut].address;\n        })[0]\n      : null;\n\n  const cleanIpfsURI = uri => {\n    try {\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n    } catch (e) {\n      console.log(e, uri);\n      return uri;\n    }\n  };\n\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\n\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\n  const priceDescription = rawPrice\n    ? invertPrice\n      ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}`\n      : `${price} ${tokenOut} per ${tokenIn}`\n    : null;\n\n  const priceWidget = (\n    <Space>\n      <Text type=\"secondary\">{priceDescription}</Text>\n      <Button\n        type=\"text\"\n        onClick={() => {\n          setInvertPrice(!invertPrice);\n        }}\n      >\n        <RetweetOutlined />\n      </Button>\n    </Space>\n  );\n\n  const swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row>\n        <Space>\n          <img src={logoIn} alt={tokenIn} width=\"30\" />\n          {amountIn}\n          {tokenIn}\n        </Space>\n      </Row>\n      <Row justify=\"center\" align=\"middle\" style={{ width: 30 }}>\n        <span>↓</span>\n      </Row>\n      <Row>\n        <Space>\n          <img src={logoOut} alt={tokenOut} width=\"30\" />\n          {amountOut}\n          {tokenOut}\n        </Space>\n      </Row>\n      <Divider />\n      <Row>{priceWidget}</Row>\n      <Row>\n        {trades && ((amountOutMin && exact === \"in\") || (amountInMax && exact === \"out\"))\n          ? exact === \"in\"\n            ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(\n                6,\n              )} ${tokenOut} or the transaction will revert.`\n            : `Input is estimated. You will sell at most ${amountInMax.toSignificant(\n                6,\n              )} ${tokenIn} or the transaction will revert.`\n          : null}\n      </Row>\n    </Modal>\n  );\n\n  return (\n    <Card\n      title={\n        <Space>\n          <img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width=\"40\" alt=\"uniswapLogo\" />\n          <Typography>Uniswapper</Typography>\n        </Space>\n      }\n      extra={\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setSettingsVisible(true);\n          }}\n        >\n          <SettingOutlined />\n        </Button>\n      }\n    >\n      <Space direction=\"vertical\">\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoIn} alt={tokenIn} width=\"30\" />\n                <Button\n                  type=\"link\"\n                  onClick={() => {\n                    setAmountOut();\n                    setAmountIn(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals));\n                    setAmountOutMin();\n                    setAmountInMax();\n                    setExact(\"in\");\n                  }}\n                >\n                  {formattedBalanceIn}\n                </Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              min={0}\n              size=\"large\"\n              value={amountIn}\n              onChange={e => {\n                setAmountOut();\n                setTrades();\n                setAmountIn(e);\n                setExact(\"in\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenIn}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              defaultValue={defaultToken}\n              onChange={value => {\n                console.log(value);\n                if (value === tokenOut) {\n                  console.log(\"switch!\", tokenIn);\n                  setTokenOut(tokenIn);\n                  setAmountOut(amountIn);\n                  setBalanceOut(balanceIn);\n                }\n                setTokenIn(value);\n                setTrades();\n                setAmountIn();\n                setExact(\"out\");\n                setBalanceIn();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Tooltip title={route.join(\"->\")}>\n            <span>↓</span>\n          </Tooltip>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoOut} width=\"30\" alt={tokenOut} />\n                <Button type=\"text\">{formattedBalanceOut}</Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              size=\"large\"\n              min={0}\n              value={amountOut}\n              onChange={e => {\n                setAmountOut(e);\n                setAmountIn();\n                setTrades();\n                setExact(\"out\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenOut}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              onChange={value => {\n                console.log(value, tokenIn, tokenOut);\n                if (value === tokenIn) {\n                  console.log(\"switch!\", tokenOut);\n                  setTokenIn(tokenOut);\n                  setAmountIn(amountOut);\n                  setBalanceIn(balanceOut);\n                }\n                setTokenOut(value);\n                setExact(\"in\");\n                setAmountOut();\n                setTrades();\n                setBalanceOut();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          {priceDescription ? priceWidget : null}\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Space>\n            {inputIsToken ? (\n              <Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>\n                {!insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"}\n              </Button>\n            ) : null}\n            <Button\n              size=\"large\"\n              loading={swapping}\n              disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut}\n              onClick={showSwapModal}\n            >\n              {insufficientBalance ? \"Insufficient balance\" : \"Swap!\"}\n            </Button>\n            {swapModal}\n          </Space>\n        </Row>\n      </Space>\n      <Drawer\n        visible={settingsVisible}\n        onClose={() => {\n          setSettingsVisible(false);\n        }}\n        width={500}\n      >\n        <Descriptions title=\"Details\" column={1} style={{ textAlign: \"left\" }}>\n          <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n          <Descriptions.Item label=\"routerAllowance\">\n            <Space>\n              {routerAllowance ? ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals) : null}\n              {routerAllowance > 0 ? <Button onClick={removeRouterAllowance}>Remove Allowance</Button> : null}\n            </Space>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n          <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n          <Descriptions.Item label=\"bestPrice\">\n            {trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"nextMidPrice\">\n            {trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"priceImpact\">\n            {trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"slippageTolerance\">\n            <InputNumber\n              defaultValue={defaultSlippage}\n              min={0}\n              max={100}\n              precision={2}\n              formatter={value => `${value}%`}\n              parser={value => value.replace(\"%\", \"\")}\n              onChange={value => {\n                console.log(value);\n\n                const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\n                setSlippageTolerance(slippagePercent);\n              }}\n            />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"amountInMax\">{amountInMax ? amountInMax.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"amountOutMin\">{amountOutMin ? amountOutMin.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"timeLimitInSeconds\">\n            <InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={value => {\n                console.log(value);\n                setTimeLimit(value);\n              }}\n            />\n          </Descriptions.Item>\n        </Descriptions>\n      </Drawer>\n    </Card>\n  );\n}\n\nexport default Swap;\n","import { DownloadOutlined, EditOutlined, SendOutlined } from \"@ant-design/icons\";\nimport { Timeline, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\n\nconst { Text } = Typography;\n\n// displays a timeline for scaffold-eth usage\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import { utils, ethers } from \"ethers\";\nimport { Button, Input, Form, Select, InputNumber, Table, Radio } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { useContractLoader, useOnBlock } from \"eth-hooks\";\nimport { NETWORKS } from \"../constants\";\nimport { Transactor } from \"../helpers\";\n\n/*\nThis is a component for bridging between L1 & L2\nCurrently it supports Testnet deposits for Arbitrum & Optimism\n\n __          _______ _____\n \\ \\        / /_   _|  __ \\\n  \\ \\  /\\  / /  | | | |__) |\n   \\ \\/  \\/ /   | | |  ___/\n    \\  /\\  /   _| |_| |\n     \\/  \\/   |_____|_|\n\n\n*/\n\nexport default function L2ArbitrumBridge({ address, userSigner }) {\n  const [L1EthBalance, setL1EthBalance] = useState(\"...\");\n  const [L2EthBalance, setL2EthBalance] = useState(\"...\");\n  const [L1Provider, setL1Provider] = useState(\"\");\n  const [L2Provider, setL2Provider] = useState(\"\");\n  const [rollup, setRollup] = useState(\"arbitrum\");\n  const [environment, setEnvironment] = useState(\"test\");\n\n  const rollupConfig = {\n    arbitrum: {\n      test: { L1: NETWORKS.rinkeby, L2: NETWORKS.rinkebyArbitrum },\n      main: { L1: NETWORKS.mainnet, L2: NETWORKS.arbitrum },\n      local: { L1: NETWORKS.localArbitrumL1, L2: NETWORKS.localArbitrum },\n    },\n    optimism: {\n      test: { L1: NETWORKS.kovan, L2: NETWORKS.kovanOptimism },\n      local: { L1: NETWORKS.localOptimismL1, L2: NETWORKS.localOptimism },\n    },\n  };\n\n  const activeConfig = rollupConfig[rollup][environment];\n\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  const tx = Transactor(userSigner);\n\n  useEffect(() => {\n    async function setProviders() {\n      const L1 = activeConfig.L1;\n      const L2 = activeConfig.L2;\n      setL1Provider(new ethers.providers.StaticJsonRpcProvider(L1.rpcUrl));\n      setL2Provider(new ethers.providers.StaticJsonRpcProvider(L2.rpcUrl));\n      setL1EthBalance(\"...\");\n      setL2EthBalance(\"...\");\n    }\n    setProviders();\n  }, [rollup]);\n\n  const contracts = useContractLoader(userSigner, { externalContracts: L1BridgeMetadata, hardhatContracts: {} });\n\n  useOnBlock(L1Provider, async () => {\n    console.log(`⛓ A new mainnet block is here: ${L1Provider._lastBlockNumber}`);\n    const yourL1Balance = await L1Provider.getBalance(address);\n    setL1EthBalance(yourL1Balance ? ethers.utils.formatEther(yourL1Balance) : \"...\");\n    const yourL2Balance = await L2Provider.getBalance(address);\n    setL2EthBalance(yourL2Balance ? ethers.utils.formatEther(yourL2Balance) : \"...\");\n  });\n\n  const { Option } = Select;\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 12 },\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 12,\n        offset: 8,\n      },\n    },\n  };\n\n  const columns = [\n    {\n      title: \"\",\n      dataIndex: \"token\",\n      key: \"token\",\n      align: \"center\",\n    },\n    {\n      title: `${activeConfig.L1.name} L1 Balance`,\n      dataIndex: \"l1\",\n      key: \"l1\",\n      align: \"center\",\n    },\n    {\n      title: `${activeConfig.L1.name} ${rollup} Balance`,\n      dataIndex: \"l2\",\n      key: \"l2\",\n      align: \"center\",\n    },\n  ];\n\n  const data = [\n    {\n      key: \"1\",\n      token: \"ETH\",\n      l1: \"Ξ\" + L1EthBalance,\n      l2: \"Ξ\" + L2EthBalance,\n    },\n  ];\n\n  const [form] = Form.useForm();\n\n  const onAssetChange = value => {\n    console.log(value);\n  };\n\n  async function onFinish(values) {\n    console.log(contracts);\n    console.log(values.amount.toString());\n    console.log(rollup);\n    let newTx;\n    try {\n      if (rollup === \"arbitrum\") {\n        newTx = await tx(\n          contracts.Inbox.depositEth(1_300_000, {\n            value: utils.parseEther(values.amount.toString()),\n            gasLimit: 300000,\n          }),\n        );\n      } else if (rollup === \"optimism\") {\n        newTx = await tx(\n          contracts.OVM_L1StandardBridge.depositETH(1_300_000, \"0x\", {\n            value: utils.parseEther(values.amount.toString()),\n          }),\n        );\n      }\n      await newTx.wait();\n      console.log(\"woop!\");\n    } catch (e) {\n      console.log(e);\n      console.log(\"something went wrong!\");\n    }\n  }\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const wrongNetwork = selectedChainId !== activeConfig.L1.chainId;\n\n  return (\n    <div style={{ padding: 16, width: 800, margin: \"auto\", marginBottom: 128 }}>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 800, margin: \"auto\", marginBottom: 128 }}>\n        <h2>Welcome to the L2 Deposit Bridge!</h2>\n        <Radio.Group\n          value={rollup}\n          onChange={e => {\n            setRollup(e.target.value);\n          }}\n          style={{ marginBottom: 10 }}\n        >\n          <Radio.Button value=\"arbitrum\">Arbitrum</Radio.Button>\n          <Radio.Button value=\"optimism\">Optimism</Radio.Button>\n        </Radio.Group>\n\n        <Table columns={columns} dataSource={data} pagination={false} style={{ marginBottom: 20 }} />\n\n        <Form\n          {...formItemLayout}\n          form={form}\n          name=\"control-hooks\"\n          onFinish={onFinish}\n          initialValues={{ assetType: \"eth\" }}\n        >\n          <Form.Item\n            name=\"assetType\"\n            label=\"Select Asset Type\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select placeholder=\"Select an asset type\" onChange={onAssetChange} allowClear>\n              <Option value=\"eth\">ETH</Option>\n              <Option disabled value=\"erc20\">\n                ERC-20\n              </Option>\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"address\" label=\"Address\">\n            <Input disabled placeholder={address} />\n          </Form.Item>\n          <Form.Item\n            name=\"amount\"\n            label=\"Amount to bridge\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <InputNumber />\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" disabled={wrongNetwork}>\n              {wrongNetwork ? `Switch wallet to ${activeConfig.L1.name}` : \"Deposit\"}\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\n// Arbitrum Inbox https://rinkeby.etherscan.io/address/0xa157dc79ca26d69c3b1282d03ec42bdee2790a8f#code\nconst ArbitrumInboxABI = [\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"uint256\", name: \"messageNum\", type: \"uint256\" },\n      { indexed: false, internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"InboxMessageDelivered\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: true, internalType: \"uint256\", name: \"messageNum\", type: \"uint256\" }],\n    name: \"InboxMessageDeliveredFromOrigin\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: false, internalType: \"address\", name: \"newSource\", type: \"address\" }],\n    name: \"WhitelistSourceUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"bridge\",\n    outputs: [{ internalType: \"contract IBridge\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"l2CallValue\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"maxSubmissionCost\", type: \"uint256\" },\n      { internalType: \"address\", name: \"excessFeeRefundAddress\", type: \"address\" },\n      { internalType: \"address\", name: \"callValueRefundAddress\", type: \"address\" },\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"createRetryableTicket\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"maxSubmissionCost\", type: \"uint256\" }],\n    name: \"depositEth\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"contract IBridge\", name: \"_bridge\", type: \"address\" },\n      { internalType: \"address\", name: \"_whitelist\", type: \"address\" },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isMaster\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendContractTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendL1FundedContractTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendL1FundedUnsignedTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes\", name: \"messageData\", type: \"bytes\" }],\n    name: \"sendL2Message\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes\", name: \"messageData\", type: \"bytes\" }],\n    name: \"sendL2MessageFromOrigin\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendUnsignedTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newSource\", type: \"address\" }],\n    name: \"updateWhitelistSource\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"whitelist\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\n// https://github.com/ethereum-optimism/optimism/blob/2bd49730fa8d2c10953873f0ccc792198a49d5c9/packages/contracts/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L1StandardBridge.sol\nconst OVM_L1StandardBridgeABI = [\n  \"function depositETH(uint32 _l2Gas,bytes calldata _data) external payable\",\n  \"function depositETHTo(address _to,uint32 _l2Gas,bytes calldata _data) external payable\",\n  \"function finalizeETHWithdrawal (address _from,address _to,uint _amount,bytes calldata _data) external\",\n];\n\nconst L1BridgeMetadata = {\n  // Arbitrium Contract's\n  44010: {\n    contracts: {\n      Inbox: {\n        address: \"0xA4d796Ad4e79aFB703340a596AEd88f8a5924183\",\n        abi: ArbitrumInboxABI,\n      },\n    },\n  },\n  4: {\n    contracts: {\n      Inbox: {\n        address: \"0x578bade599406a8fe3d24fd7f7211c0911f5b29e\",\n        abi: ArbitrumInboxABI,\n      },\n    },\n  },\n  // Optimism Contract's\n  31337: {\n    contracts: {\n      OVM_L1StandardBridge: {\n        address: \"0x998abeb3E57409262aE5b751f60747921B33613E\",\n        abi: OVM_L1StandardBridgeABI,\n      },\n    },\n  },\n  42: {\n    contracts: {\n      OVM_L1StandardBridge: {\n        address: \"0x22F24361D548e5FaAfb36d1437839f080363982B\",\n        abi: OVM_L1StandardBridgeABI,\n      },\n    },\n  },\n};\n","export default __webpack_public_path__ + \"static/media/ethereumLogo.a1b9f99b.png\";","import React from \"react\";\nimport \"./Header.css\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../ethereumLogo.png\";\nexport default function Header1({ acnt, setRoute }) {\n  return (\n    <header className=\"header \">\n      <div className=\"header-absolute\">\n        <div className=\"content mod--header\">\n          <div className=\"header__columns\">\n            <div className=\"header__col\">\n              <a\n                href=\"/\"\n                className=\"header__logo-link w-inline-block header-logo-link-a\"\n                style={{ fontSize: \"1.5rem\", color: \"white\" }}\n              >\n                <img src={logo} loading=\"lazy\" alt=\"\" width=\"100\" height=\"50\" className=\"header__logo-img\" />\n                Lebium\n              </a>\n            </div>\n            <div className=\"header__col mod--2\">\n              <Link to=\"/\" data-anim=\"link\" className=\"header__nav-link w-inline-block\">\n                <div className=\"nav-txt-anim\">\n                  <div className=\"nav-txt mod--over\">Upload</div>\n                  <div className=\"nav-txt\">Upload</div>\n                </div>\n              </Link>\n              <Link\n                to=\"/library\"\n                data-anim=\"link\"\n                className=\"header__nav-link w-inline-block\"\n                onClick={() => {\n                  setRoute(\"/library\");\n                }}\n              >\n                <div className=\"nav-txt-anim\">\n                  <div className=\"nav-txt mod--over\">Public Library</div>\n                  <div className=\"nav-txt\">Public Library</div>\n                </div>\n              </Link>\n\n              <Link\n                to=\"/privatelibrary\"\n                data-anim=\"link\"\n                className=\"header__nav-link w-inline-block\"\n                onClick={() => {\n                  setRoute(\"/privatelibrary\");\n                }}\n              >\n                <div className=\"nav-txt-anim\">\n                  <div className=\"nav-txt mod--over\">Private Library</div>\n                  <div className=\"nav-txt\">Private Library</div>\n                </div>\n              </Link>\n              <Link\n                to=\"/history\"\n                data-anim=\"link\"\n                className=\"header__nav-link w-inline-block\"\n                onClick={() => {\n                  setRoute(\"/history\");\n                }}\n              >\n                <div className=\"nav-txt-anim\">\n                  <div className=\"nav-txt mod--over\">Shared</div>\n                  <div className=\"nav-txt\">Shared</div>\n                </div>\n              </Link>\n              {/* <a href=\"#Benefits\" data-anim=\"link\" className=\"header__nav-link w-inline-block\">\n                <div className=\"nav-txt-anim\">\n                  <div className=\"nav-txt mod--over\">Benefits</div>\n                  <div className=\"nav-txt\">Benefits</div>\n                </div>\n              </a>\n              <a href=\"#About\" data-anim=\"link\" className=\"header__nav-link w-inline-block\">\n                <div className=\"nav-txt-anim\">\n                  <div className=\"nav-txt mod--over\">About</div>\n                  <div className=\"nav-txt\">About</div>\n                </div>\n              </a> */}\n            </div>\n            <div className=\"header__col\">\n              {acnt}\n\n              <div className=\"header__humburger-wrap\">\n                <div className=\"header__humb\">\n                  <div className=\"header__humb-line mod--1\"></div>\n                  <div className=\"header__humb-line mod--2\"></div>\n                  <div className=\"header__humb-line mod--3\"></div>\n                </div>\n                <div className=\"header__humb-close\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* </div> */}\n        <div className=\"menu header-menu-display-c\">\n          <div className=\"menu__content menu-content-opacity-height-c\">\n            <nav className=\"menu__nav header-nav-bar-c\">\n              <a href=\"#uploadFiles\" className=\"menu__nav-link\">\n                Upload Files\n              </a>\n              <a href=\"#Benefits\" className=\"menu__nav-link\">\n                Benefits\n              </a>\n              <a href=\"#About\" className=\"menu__nav-link\">\n                About\n              </a>\n            </nav>\n            <a href=\"#\" className=\"btn btn--reg w-button\">\n              Connect Wallet\n            </a>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import React, { useState } from \"react\";\nimport { FileUpload } from \"react-ipfs-uploader\";\nimport { Input, Checkbox, Button, Switch } from \"antd\";\nimport \"./BigTransfer.css\";\n\nexport default function BigTransfer({ writeContracts, tx }) {\n  const mystyle = {\n    // WebkitTransform: \"translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n    MozTransform: \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n    MsTransform: \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n    // transform: \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n  };\n\n  const [fileUrl, setFileUrl] = useState(\"\");\n\n  const [priv, setPriv] = useState(false);\n\n  const [fileName, setfileName] = useState(\"\");\n  const [fileCategory, setfileCategory] = useState(\"\");\n\n  const [fileDescription, setfileDescription] = useState(\"\");\n\n  const submitContract = async () => {\n    try {\n      console.log(\"writeContracts\", writeContracts);\n      let waveTnx;\n      if (priv) {\n        waveTnx = await tx(writeContracts.Library.PrivateUpload(fileName, fileUrl, fileDescription, fileCategory));\n      } else {\n        waveTnx = await tx(writeContracts.Library.publicUpload(fileName, fileUrl, fileDescription, fileCategory));\n      }\n\n      console.log(\"Minig..\", waveTnx.hash);\n\n      await waveTnx.wait();\n      console.log(\"Minig---\", waveTnx.hash);\n\n      setFileUrl(\"\");\n      setfileName(\"\");\n      setfileCategory(\"\");\n      setfileDescription(\"\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <section\n      id=\"uploadFiles\"\n      data-w-id=\"9a8c8c5e-18d4-aeb9-bc37-bac71fe0745b\"\n      className=\"section mod--hero\"\n      style={mystyle}\n    >\n      <div className=\"content mod--hero u-upload-opacity\">\n        <div className=\"hero__content\">\n          <h2 className=\"heading1 mod--hero\" style={{ color: \"white\" }}>\n            Make your data immortal\n          </h2>\n          <p className=\"hero__p\">\n            Upload files,books,videos to our decentralized library for users around the world. View and download any\n            file from our library without restrictions.\n          </p>\n\n          <div>\n            <label>File name:</label>\n            <Input type=\"text\" placeholder=\"File Name\" onChange={e => setfileName(e.target.value)} value={fileName} />\n\n            <br />\n            <label>File category:</label>\n            <Input\n              type=\"text\"\n              placeholder=\"File Name\"\n              onChange={e => setfileCategory(e.target.value)}\n              value={fileCategory}\n            />\n\n            <br />\n\n            <label>File Description:</label>\n            <Input\n              type=\"text\"\n              placeholder=\"File Description\"\n              onChange={e => setfileDescription(e.target.value)}\n              value={fileDescription}\n            />\n\n            <br />\n            <label>File Select:</label>\n            <FileUpload setUrl={setFileUrl} style={{ margin: \"20\" }} />\n\n            {fileUrl && (\n              <>\n                <div style={{ backgroundColor: \"green\", margin: \"7\" }}>\n                  FileUrl :{\" \"}\n                  <a\n                    href={fileUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{ padding: \"10px\", margin: \"10px\", color: \"green\", color: \"white\" }}\n                  >\n                    {fileUrl}\n                  </a>\n                </div>\n                <Button\n                  className=\"waveButton\"\n                  style={{ margin: \"10px\", color: \"green\" }}\n                  onClick={submitContract}\n                  disabled={!fileUrl || !fileName || !fileCategory || !fileDescription}\n                >\n                  Add to llbrary\n                </Button>\n              </>\n            )}\n            <div style={{ marginTop: \"30\", paddingTop: \"30\" }}>\n              <Switch\n                checkedChildren=\"Public\"\n                unCheckedChildren=\"Private\"\n                defaultChecked\n                onChange={e => {\n                  setPriv(!priv);\n\n                  console.log(priv);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"bg\">\n        <div className=\"bg__grey u-big-grey\"></div>\n        <div className=\"bg__img-wrap mod--1\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac6231e8007e01811_hero_illustr-01.svg\"\n            loading=\"eager\"\n            style={{\n              WebkitTransform:\n                \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n            }}\n            alt=\"\"\n            className=\"bg__img mod--1\"\n          />\n        </div>\n        <div className=\"bg__img-wrap mod--2\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c0091b91c1cbb7cad7e1_hero_illustr-02.svg\"\n            loading=\"eager\"\n            style={{\n              WebkitTransform:\n                \"translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(0, 100%, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n            }}\n            alt=\"\"\n            className=\"bg__img mod--2\"\n          />\n        </div>\n        <div className=\"bg__img-wrap mod--3\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00acd123f38faf9fcf1_hero_illustr-04.svg\"\n            loading=\"eager\"\n            style={{\n              WebkitTransform:\n                \"translate3d(-50px, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(-50px, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(-50px, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(-50px, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n            }}\n            alt=\"\"\n            className=\"bg__img mod--3\"\n          />\n        </div>\n        <div className=\"bg__img-wrap mod--4\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00afa26111b563f2134_hero_illustr-03.svg\"\n            loading=\"eager\"\n            style={{\n              WebkitTransform:\n                \"translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n            }}\n            alt=\"\"\n            className=\"bg__img mod--4\"\n          />\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { Empty, Input, Checkbox, Button, Switch } from \"antd\";\n\nexport default function Library({ publicLibrary, writeContracts, tx }) {\n  const [searchEvents, setSearchEvents] = useState(publicLibrary);\n  const [val, setVal] = useState(\"\");\n  const [data, setData] = useState(0);\n  const onSearch = e => {\n    setVal(e.target.value);\n    console.log(val);\n    setSearchEvents(publicLibrary.filter(item => item.name.includes(val)));\n  };\n\n  const getFilePrice = async(x) => {\n    let waveTnx;\n      // eslint-disable-next-line prettier/prettier\n      waveTnx = await tx(writeContracts.Library.assetPrice(x));\n      console.log(waveTnx)\n      return waveTnx;\n  }\n\n  // eslint-disable-next-line prettier/prettier\n  const buyFile = async (id) => {\n    try {\n      getFilePrice(id)\n      .then(r => {\n        let trx;\n        trx = tx(writeContracts.Library.buyItem(id,{value: r }));\n      })\n      // console.log(\"writeContracts\", writeContracts);\n      // let waveTnx;\n      // // eslint-disable-next-line prettier/prettier\n      // waveTnx = await tx(writeContracts.Library.buyItem(id, { value: (price * 1e18).toString() }));\n\n      // console.log(\"Minig..\", waveTnx.hash);\n\n      // await waveTnx.wait();\n      // console.log(\"Minig---\", waveTnx.hash);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n\n  return (\n    <div style={{ backgroundColor: \"#636C78\" }}>\n      <section id=\"#Library\" data-w-id=\"9a8c8c5e-18d4-aeb9-bc37-bac71fe0745b\" className=\"section mod--hero \">\n        <h1 className=\"heading--center\" style={{ color: \"#fff\" }}>\n          Library\n        </h1>\n        <Input placeholder=\"search by title\" onChange={onSearch} value={val} style={{ width: \"70%\", margin: \"20\" }} />\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {searchEvents?.length ? (\n            searchEvents?.map((item, index) => (\n              <div key={item.transactionHash + item.blockNumber + \"_\"}>\n                <div className=\"flex-personal\">\n                  <div data-w-id=\"23aa82da-d192-8dd9-fd6c-34b1289acbf1\" className=\"content\">\n                    <div data-w-id=\"f29f62bd-d2b8-d92f-ba3b-fec3f8494fcb\" className=\"swiper-slide mod--work\">\n                      <div className=\"work__card\">\n                        <div className=\"work__ico-wrap\" style={{ width: \"100%\" }}>\n                          <div className=\"work__ico-anim\">\n                            <img\n                              src={\n                                item.Link ??\n                                \"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\"\n                              }\n                              loading=\"lazy\"\n                              alt=\"\"\n                              className=\"work__ico\"\n                              sizes=\"(max-width: 479px) 100vw, (max-width: 767px) 100vw, (max-width: 991px) 100vw, 100vw\"\n                            />\n                            <img\n                              src={\n                                item.Link ??\n                                \"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\"\n                              }\n                              loading=\"eager\"\n                              alt=\"\"\n                              className=\"work__ico mod--over\"\n                              sizes=\"(max-width: 479px) 100vw, (max-width: 767px) 100vw, (max-width: 991px) 100vw, 100vw\"\n                            />\n                          </div>\n                        </div>\n                        <h3 className=\"work__title\">{item.name}</h3>\n                        <p className=\"work__p\">{item.description}</p>\n                        <a href={`${item.Link}`} download={item.name} target=\"_blank\">\n                          View\n                        </a>\n                        <br />\n                        {/* eslint-disable-next-line prettier/prettier */}\n                        <p className=\"work__p\">Price: $ {(item.price).toString()}</p>\n                        <Button\n                          type=\"button\"\n                          className=\"waveButton\"\n                          style={{ margin: \"10px\", color: \"green\" }}\n                          // eslint-disable-next-line prettier/prettier\n                          onClick={() => buyFile(index)}\n                        >\n                          Buy File\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <Empty />\n          )}\n        </div>\n        <div className=\"bg__grey u-big-grey\"></div>\n        <div className=\"bg__img-wrap mod--1\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac6231e8007e01811_hero_illustr-01.svg\"\n            loading=\"eager\"\n            style={{\n              WebkitTransform:\n                \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n            }}\n            alt=\"\"\n            className=\"bg__img mod--1\"\n          />\n        </div>\n        <div className=\"bg__img-wrap mod--4\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00afa26111b563f2134_hero_illustr-03.svg\"\n            loading=\"eager\"\n            style={{\n              WebkitTransform:\n                \"translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n            }}\n            alt=\"\"\n            className=\"bg__img mod--4\"\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Benefits() {\n\n  return (\n    <section id=\"Benefits\" className=\"section mod--work\">\n        <div data-w-id=\"23aa82da-d192-8dd9-fd6c-34b1289acbf1\" className=\"content\">\n            <h2 className=\"heading--center\">\n            Benefits of a Decentralized Library.\n            </h2>\n            <div data-swiper=\"work\" className=\"swiper mod--work\">\n                <div className=\"swiper-wrapper\">\n                    <div data-w-id=\"f29f62bd-d2b8-d92f-ba3b-fec3f8494fcb\" className=\"swiper-slide mod--work\">\n                        <div className=\"work__card\">\n                            <div className=\"work__ico-wrap\">\n                                <div className=\"work__ico-anim\">\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\" loading=\"lazy\" alt=\"\" className=\"work__ico\"/>\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\" loading=\"eager\" alt=\"\" className=\"work__ico mod--over\"/>\n                                </div>\n                            </div>\n                            <h3 className=\"work__title\">\n                                Unlimited access <br/>to multiple files\n                            </h3>\n                            <p className=\"work__p\">You can view and download any file,document, image,or video of your choice without any restrictions. </p>\n                        </div>\n                    </div>\n                    <div data-w-id=\"b4d1f57e-f6da-36d3-f9fc-34dd29e90da3\" className=\"swiper-slide mod--work\">\n                        <div className=\"work__card\">\n                            <div className=\"work__ico-wrap\">\n                                <div className=\"work__ico-anim\">\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00aad780a2a6c3d5587_work_ico-02.svg\" loading=\"lazy\" alt=\"\" className=\"work__ico\"/>\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00aad780a2a6c3d5587_work_ico-02.svg\" loading=\"eager\" alt=\"\" className=\"work__ico mod--over\"/>\n                                </div>\n                            </div>\n                            <h3 className=\"work__title\">\n                                Permanent hosting<br/> of files & documents\n                            </h3>\n                            <p className=\"work__p\">Files in our library are permanently hosted on IPFS without fear of being removed someday.</p>\n                        </div>\n                    </div>\n                    <div data-w-id=\"7cbf0612-69fa-d5d9-0be0-c9398f6d2040\" className=\"swiper-slide mod--work\">\n                        <div className=\"work__card\">\n                            <div className=\"work__ico-wrap\">\n                                <div className=\"work__ico-anim\">\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00aad35eb9e9990de6b_work_ico-03.svg\" loading=\"lazy\" alt=\"\" className=\"work__ico\"/>\n                                    <img src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00aad35eb9e9990de6b_work_ico-03.svg\" loading=\"eager\" alt=\"\" className=\"work__ico mod--over\"/>\n                                </div>\n                            </div>\n                            <h3 className=\"work__title\">\n                                Supports any format of file\n                            </h3>\n                            <p className=\"work__p\">\n                                The app has improved support for any file format\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div data-swiper=\"pagination-work\" className=\"swiper__pagination\">\n                <div className=\"swiper__pagination-dot active\"></div>\n                <div className=\"swiper__pagination-dot\"></div>\n            </div>\n        </div>\n    </section>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer id=\"About\" data-w-id=\"5a902773-1dd3-2c0e-6f8b-6e47cae613d7\" className=\"footer\">\n      <div data-w-id=\"682e79bb-f4d4-aca3-65b1-e2dce7b2d527\" className=\"content\">\n        <div data-w-id=\"611e80fe-41d5-4cae-c50f-d3d115a1656e\" className=\"footer__offer\">\n          <h2 className=\"footer__offer-heading\">Get started with our Library.</h2>\n          <div data-style=\"dash2\" className=\"footer__offer-btn-wrap\">\n            <a\n              h\n              className=\"btn mod--offer w-inline-block\"\n              href=\"https://docs.google.com/document/d/1BdJDtpJNNA4v50HElhuG54_vyWScKbgA9w-xG7TFL-M/edit?usp=sharing\"\n              download=\"Docs\"\n              target=\"_blank\"\n            >\n              <div className=\"btn-offer__arrow-wrap\">\n                <img\n                  src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac7568a0a8a34d4c9_ico_arrow.svg\"\n                  loading=\"eager\"\n                  width=\"16\"\n                  alt=\"\"\n                  className=\"btn-offer__arrow\"\n                />\n                <img\n                  src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac7568a0a8a34d4c9_ico_arrow.svg\"\n                  loading=\"eager\"\n                  width=\"16\"\n                  alt=\"\"\n                  className=\"btn-offer__arrow mod--over\"\n                />\n              </div>\n            </a>\n          </div>\n        </div>\n        <div data-w-id=\"7e9e6881-6e97-16bf-f176-6472c127fab0\" className=\"footer__columns mod--top\">\n          <div className=\"footer__col mod--1\">\n            <div data-hover=\"false\" data-delay=\"0\" className=\"footer__drop w-dropdown\">\n              <div className=\"footer__drop-btn w-dropdown-toggle\">\n                <div className=\"footer__drop-arrow\"></div>\n                <div className=\"footer__title\">About us</div>\n              </div>\n              <nav className=\"footer__drop-list w-dropdown-list\">\n                <p className=\"footer__p\">\n                  We are defeating data death preventing the accidental or intentional loss of information from human\n                  consciousness\n                </p>\n              </nav>\n            </div>\n          </div>\n          <div className=\"footer__col mod--2\">\n            <div data-hover=\"false\" data-delay=\"0\" className=\"footer__drop w-dropdown\">\n              <div className=\"footer__drop-btn w-dropdown-toggle\">\n                <div className=\"footer__drop-arrow\"></div>\n                <div className=\"footer__title\">Sitemap</div>\n              </div>\n              <nav className=\"footer__drop-list w-dropdown-list\">\n                <ul role=\"list\" className=\"footer__list\">\n                  <li className=\"footer__list-item\">\n                    <a href=\"#Big-transfers\" data-anim=\"link\" className=\"footer__nav-link w-inline-block\">\n                      <div className=\"nav-txt-anim\">\n                        <div className=\"nav-txt mod--over\">Upload</div>\n                        <div className=\"nav-txt\">Upload</div>\n                      </div>\n                    </a>\n                  </li>\n                  <li className=\"footer__list-item\">\n                    <a href=\"#Benefits\" data-anim=\"link\" className=\"footer__nav-link w-inline-block\">\n                      <div className=\"nav-txt-anim\">\n                        <div className=\"nav-txt mod--over\">Benefits</div>\n                        <div className=\"nav-txt\">Benefits</div>\n                      </div>\n                    </a>\n                  </li>\n                  <li className=\"footer__list-item\">\n                    <a href=\"#About\" data-anim=\"link\" className=\"footer__nav-link w-inline-block\">\n                      <div className=\"nav-txt-anim\">\n                        <div className=\"nav-txt mod--over\">About</div>\n                        <div className=\"nav-txt\">About</div>\n                      </div>\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n          <div className=\"footer__col mod--3\">\n            <div data-hover=\"false\" data-delay=\"0\" className=\"footer__drop w-dropdown\">\n              <div className=\"footer__drop-btn w-dropdown-toggle\">\n                <div className=\"footer__drop-arrow\"></div>\n                <div className=\"footer__title\">Community</div>\n              </div>\n              <nav className=\"footer__drop-list w-dropdown-list\">\n                <ul role=\"list\" className=\"footer__list\">\n                  <li className=\"footer__list-item\">\n                    <a\n                      data-anim=\"link\"\n                      href=\"https://github.com/Epic-Byte\"\n                      target=\"_blank\"\n                      className=\"footer__nav-link w-inline-block\"\n                    >\n                      <div className=\"nav-txt-anim\">\n                        <div className=\"nav-txt mod--over\">Github</div>\n                        <div className=\"nav-txt\">Github</div>\n                      </div>\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n        <div data-w-id=\"6fa7cd3d-1174-5ce2-c66f-feac5359db31\" className=\"footer__columns mod--bottom\">\n          <div className=\"footer__col mod--1 mod--bottom\">\n            <a href=\"https://www.halo-lab.com/\" target=\"_blank\" className=\"footer__copyright w-inline-block\">\n              <img\n                src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1b5d6cb8a000ae4fa6ed5_logo-copyright.svg\"\n                loading=\"eager\"\n                alt=\"\"\n                className=\"footer__copyright-logo\"\n              />\n              <div>2022 Team Call_Byte. All rights reserved</div>\n            </a>\n          </div>\n          <div className=\"footer__col mod--3 mod--bottom\">\n            <div\n              data-hover=\"false\"\n              data-delay=\"0\"\n              data-w-id=\"d72c125b-9204-994f-ddc2-45742146f539\"\n              className=\"droplang w-dropdown\"\n            >\n              <div className=\"droplang__btn w-dropdown-toggle\">\n                <div className=\"droplang__arrow\"></div>\n                <div>English</div>\n              </div>\n            </div>\n          </div>\n          <div data-w-id=\"1ebd09bc-975c-910f-0331-5939e65d2cb5\" className=\"footer__line\"></div>\n        </div>\n      </div>\n      <div className=\"bg mod--footer\">\n        <div data-w-id=\"8d4f32de-0889-8a62-2cd8-38dabae4cdd8\" className=\"bg__grey\"></div>\n        <div className=\"bg__img-wrap mod--5\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c0097303bbbc6f932748_footer_illustr-01.svg\"\n            loading=\"eager\"\n            data-w-id=\"95780d0c-c0ed-89df-fca2-82a29ec1fb46\"\n            alt=\"\"\n            className=\"bg__img mod--5\"\n          />\n        </div>\n        <div className=\"bg__img-wrap mod--6\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c009ad35eb7c2390de6a_footer_illustr-03.svg\"\n            loading=\"eager\"\n            data-w-id=\"95780d0c-c0ed-89df-fca2-82a29ec1fb47\"\n            alt=\"\"\n            className=\"bg__img mod--6\"\n          />\n        </div>\n      </div>\n      <div className=\"bg__img-wrap mod--7\">\n        <img\n          src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c0094a86366aa92a4b8a_footer_illustr-02.svg\"\n          loading=\"eager\"\n          data-w-id=\"95780d0c-c0ed-89df-fca2-82a29ec1fb48\"\n          alt=\"\"\n          className=\"bg__img mod--7\"\n        />\n      </div>\n    </footer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Input, Empty } from \"antd\";\nimport { AddressInput } from \"./\";\n\nexport default function PrivateLibrary({ writeContracts, tx, privateLibrary, mainnetProvider }) {\n  const [shareToAddresses, setShareToAddresses] = useState({});\n  const [searchEvents, setSearchEvents] = useState(privateLibrary);\n  // const [Price, setPrice] = useState(\"\");\n\n  const [val, setVal] = useState(\"\");\n  const onSearch = e => {\n    setVal(e.target.value);\n    console.log(val);\n    setSearchEvents(privateLibrary.filter(item => item.name.includes(val)));\n  };\n\n  // eslint-disable-next-line prettier/prettier\n  const salePrice = async (id) => {\n    try {\n      console.log(\"writeContracts\", writeContracts);\n      let waveTnx;\n      const newPrice = prompt(\"Please enter the selling price for your file in USD\");\n      console.log(newPrice);\n      // setPrice(newPrice);\n      waveTnx = await tx(writeContracts.Library.publicSale(id, newPrice));\n\n      await waveTnx.wait();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div style={{ backgroundColor: \"#636C78\" }}>\n      <section id=\"#Library\" data-w-id=\"9a8c8c5e-18d4-aeb9-bc37-bac71fe0745b\" className=\"section mod--hero \">\n        <h1 className=\"heading--center\" style={{ color: \"#fff\" }}>\n          Private Library\n        </h1>\n        <Input placeholder=\"search by title\" onChange={onSearch} value={val} style={{ width: \"70%\", margin: \"20\" }} />\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {searchEvents?.length ? (\n            searchEvents?.map((item, index) => (\n              <div key={index + \"_\" + item.address} style={{ margin: 10 }}>\n                <div data-w-id=\"23aa82da-d192-8dd9-fd6c-34b1289acbf1\" className=\"content\">\n                  <div data-w-id=\"f29f62bd-d2b8-d92f-ba3b-fec3f8494fcb\" className=\"swiper-slide mod--work\">\n                    <div className=\"work__card\">\n                      <div className=\"work__ico-wrap\" style={{ width: \"100%\" }}>\n                        <div className=\"work__ico-anim\">\n                          <img\n                            src={\n                              item.Link ??\n                              \"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\"\n                            }\n                            loading=\"lazy\"\n                            alt=\"\"\n                            className=\"work__ico\"\n                            sizes=\"(max-width: 479px) 100vw, (max-width: 767px) 100vw, (max-width: 991px) 100vw, 100vw\"\n                          />\n                          <img\n                            src={\n                              item.Link ??\n                              \"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00a889e5f20911275b4_work_ico-01.svg\"\n                            }\n                            loading=\"eager\"\n                            alt=\"\"\n                            className=\"work__ico mod--over\"\n                            sizes=\"(max-width: 479px) 100vw, (max-width: 767px) 100vw, (max-width: 991px) 100vw, 100vw\"\n                          />\n                        </div>\n                      </div>\n                      <h3 className=\"work__title\">{item.name}</h3>\n                      <p className=\"work__p\">{item.description}</p>\n                      <a href={`${item.Link}`} download={item.name} target=\"_blank\">\n                        View\n                      </a>\n                      <br />\n                      {/* eslint-disable-next-line prettier/prettier */}\n                        <p className=\"work__p\">Price: $ {(item.price).toString()}</p>\n                      <div>\n                        <AddressInput\n                          ensProvider={mainnetProvider}\n                          placeholder=\"share to address\"\n                          value={shareToAddresses[index]}\n                          onChange={val => {\n                            const update = {};\n                            update[index] = val;\n                            setShareToAddresses({ ...shareToAddresses, ...update });\n                          }}\n                        />\n                        {/* <Input\n                          placeholder=\"share to address\"\n                          value={shareToAddresses[index]}\n                          onChange={e => {\n                            const update = {};\n                            update[index] = e.target.value;\n                            setShareToAddresses({ ...shareToAddresses, ...update });\n                          }}\n                        /> */}\n\n                        <Button\n                          style={{ margin: 10 }}\n                          onClick={() => {\n                            console.log(\"writeContracts\", writeContracts);\n                            // let id = 1;\n                            tx(writeContracts.Library.share([shareToAddresses[index]], index + 1));\n                          }}\n                        >\n                          share\n                        </Button>\n                        {/* eslint-disable-next-line prettier/prettier */}\n                      \n                        <Button\n                          type=\"button\"\n                          className=\"waveButton\"\n                          style={{ margin: \"10px\", color: \"green\" }}\n                          // eslint-disable-next-line prettier/prettier\n                          onClick={() => salePrice(item.ID)}\n                        >\n                          Sell\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <Empty />\n          )}\n        </div>\n        <div className=\"bg__grey u-big-grey\"></div>\n        <div className=\"bg__img-wrap mod--1\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac6231e8007e01811_hero_illustr-01.svg\"\n            loading=\"eager\"\n            style={{\n              WebkitTransform:\n                \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n            }}\n            alt=\"\"\n            className=\"bg__img mod--1\"\n          />\n        </div>\n        <div className=\"bg__img-wrap mod--4\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00afa26111b563f2134_hero_illustr-03.svg\"\n            loading=\"eager\"\n            style={{\n              WebkitTransform:\n                \"translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n            }}\n            alt=\"\"\n            className=\"bg__img mod--4\"\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Empty, Collapse, Card } from \"antd\";\nimport { Address } from \"./\";\n\nexport default function PrivateLibrary({ shareEvents, mainnetProvider, address }) {\n  const { Panel } = Collapse;\n\n  const filteredShareEvents = shareEvents.filter(it => address == it.args[0]);\n\n  // console.log(filteredShareEvents);\n  const shareEventsReverse = filteredShareEvents.reverse();\n  // console.log(shareEventsReverse);\n  return (\n    <div style={{ backgroundColor: \"#636C78\" }}>\n      <section id=\"#Library\" data-w-id=\"9a8c8c5e-18d4-aeb9-bc37-bac71fe0745b\" className=\"section mod--hero \">\n        <h1 className=\"heading--center\" style={{ color: \"#fff\" }}>\n          Your Sharing History\n        </h1>\n        {shareEventsReverse?.length ? (\n          <Collapse defaultActiveKey={[\"2\"]} onChange={() => console.log(\"k\")}>\n            <Panel header=\"Private Files Transfered\" key=\"2\">\n              <Card\n                headStyle={{\n                  borderRadius: 5,\n                  background:\n                    \"linear-gradient(-90deg, rgba(162,34,195,0.5760898109243697) 7%, rgba(45,205,253,0.5312718837535014) 88%)\",\n                }}\n                bodyStyle={{\n                  borderRadius: 10,\n                  background:\n                    \"linear-gradient(90deg, rgba(140,34,195,0.5760898109243697) 7%, rgba(45,159,253,0.5312718837535014) 88%)\",\n                }}\n              >\n                {shareEventsReverse?.map(item => (\n                  <div\n                    key={item.blockNumber + item.blockHash}\n                    style={{\n                      minWidth: \"85%\",\n                      display: \"flex\",\n                      alignContent: \"space-between\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"start\",\n                    }}\n                  >\n                    <p style={{ marginRight: 6 }}>Shared: {\"  \"}</p>\n                    <span style={{ marginRight: 6, fontWeight: 826 }}>#{item.args[1]} </span>\n                    <p style={{ marginLRight: 16 }}>to &nbsp; &nbsp; {\"    \"}</p>\n                    <Address address={item.args[2]} ensProvider={mainnetProvider} fontSize={16} />\n                  </div>\n                ))}\n              </Card>\n            </Panel>\n          </Collapse>\n        ) : (\n          <Empty />\n        )}\n\n        <div className=\"bg__grey u-big-grey\"></div>\n        <div className=\"bg__img-wrap mod--1\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00ac6231e8007e01811_hero_illustr-01.svg\"\n            loading=\"eager\"\n            style={{\n              WebkitTransform:\n                \"translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(-100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n            }}\n            alt=\"\"\n            className=\"bg__img mod--1\"\n          />\n        </div>\n        <div className=\"bg__img-wrap mod--4\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/61c1b5d6cb8a0046c7fa6e82/61c1c00afa26111b563f2134_hero_illustr-03.svg\"\n            loading=\"eager\"\n            style={{\n              WebkitTransform:\n                \"translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-moz-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);-ms-transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0);transform:translate3d(100%, 0, 0) scale3d(1, 1, 1) rotateX(0) rotateY(0) rotateZ(0) skew(0, 0)\",\n            }}\n            alt=\"\"\n            className=\"bg__img mod--4\"\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n","import Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Authereum from \"authereum\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Fortmatic from \"fortmatic\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Address, AddressInput, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { Header1, BigTransfer, Library, Benefits, Footer, PrivateLibrary, SharingHistory } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport { useContractConfig } from \"./hooks\";\n\nconst { BufferList } = require(\"bl\");\nconst ipfsAPI = require(\"ipfs-http-client\");\nconst ipfs = ipfsAPI({ host: \"ipfs.infura.io\", port: \"5001\", protocol: \"https\" });\n\nconst { ethers } = require(\"ethers\");\n\nconst targetNetwork = NETWORKS.rinkeby; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\n\n// EXAMPLE STARTING JSON:\nconst STARTING_JSON = {\n  description: \"It's actually a bison?\",\n  external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\n  image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  name: \"Buffalo\",\n  attributes: [\n    {\n      trait_type: \"BackgroundColor\",\n      value: \"green\",\n    },\n    {\n      trait_type: \"Eyes\",\n      value: \"googly\",\n    },\n  ],\n};\n\n// 🛰 providers\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n\nconst scaffoldEthProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\n  : null;\nconst poktMainnetProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\n      \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n    )\n  : null;\nconst mainnetInfura = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n  : null;\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n\n// 🏠 Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// 🔭 block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true, // optional\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\", // xDai\n        },\n      },\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\",\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n      },\n    },\n    fortmatic: {\n      package: Fortmatic, // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\", // required\n      },\n    },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      },\n    },\n    authereum: {\n      package: Authereum, // required\n    },\n  },\n});\n\nfunction App(props) {\n  const mainnetProvider =\n    poktMainnetProvider && poktMainnetProvider._isProvider\n      ? poktMainnetProvider\n      : scaffoldEthProvider && scaffoldEthProvider._network\n      ? scaffoldEthProvider\n      : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  const contractConfig = useContractConfig();\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  const publicLibrary = useContractReader(writeContracts, \"Library\", \"viewPublicLib\");\n  console.log(\"🤗 publicLibrary:\", publicLibrary);\n  const privateLibrary = useContractReader(writeContracts, \"Library\", \"viewPrivateLib\");\n  console.log(\"🤗 privateLibrary:\", privateLibrary);\n\n  // 📟 Listen for broadcast events\n  const uploadEvents = useEventListener(readContracts, \"Library\", \"PublicUpload\", localProvider, 1);\n  console.log(\"📟 Upload events:\", uploadEvents);\n\n  const shareEvents = useEventListener(readContracts, \"Library\", \"Share\", localProvider, 1);\n  console.log(\"📟 Share events:\", shareEvents);\n\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      // console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\n      // console.log(\"🌎 mainnetProvider\", mainnetProvider);\n      console.log(\"🏠 localChainId\", localChainId);\n      console.log(\"👩‍💼 selected address:\", address);\n      // console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\n      // console.log(\"💵 yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      // console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"📝 readContracts\", readContracts);\n      console.log(\"🌍 DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"💵 yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"🔐 writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  return (\n    <div className=\"main\">\n      <BrowserRouter>\n        <Header1\n          acnt={\n            <Account\n              address={address}\n              localProvider={localProvider}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              price={price}\n              web3Modal={web3Modal}\n              loadWeb3Modal={loadWeb3Modal}\n              logoutOfWeb3Modal={logoutOfWeb3Modal}\n              blockExplorer={blockExplorer}\n              networkDisplay={\n                <div\n                  style={{\n                    // zIndex: -1,\n                    position: \"absolute\",\n                    right: 15,\n                    // top: 28,\n                    // padding: 5,\n                    color: targetNetwork.color,\n                    // border: \"1px solid red\",\n                  }}\n                >\n                  {targetNetwork?.name}\n                </div>\n              }\n            />\n          }\n          setRoute={setRoute}\n        />\n        <Switch>\n          <Route exact path=\"/\">\n            <BigTransfer writeContracts={writeContracts} tx={tx} />\n          </Route>\n          <Route path=\"/library\">\n            <Library\n              writeContracts={writeContracts}\n              tx={tx}\n              publicLibrary={publicLibrary}\n              //uploadEvents={uploadEvents}\n            />\n          </Route>\n\n          <Route path=\"/privatelibrary\">\n            <PrivateLibrary\n              writeContracts={writeContracts}\n              tx={tx}\n              privateLibrary={privateLibrary}\n              mainnetProvider={mainnetProvider}\n            />\n          </Route>\n\n          <Route path=\"/history\">\n            <SharingHistory shareEvents={shareEvents} mainnetProvider={mainnetProvider} address={address} />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n      <Benefits />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\nimport { loadAppContracts } from \"../helpers/loadAppContracts\";\n\nexport const useContractConfig = () => {\n  const [contractsConfig, setContractsConfig] = useState({});\n\n  useEffect(() => {\n    const loadFunc = async () => {\n      const result = await loadAppContracts();\n      setContractsConfig(result);\n    };\n    void loadFunc();\n  }, []);\n  return contractsConfig;\n};\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={\"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}